body {
  background: black;
  /* we make padding and margin 0 to remove space
	at the edges of the browser therefore making
	children elements get all the way to the edge */
  padding: 0px;
  margin: 0px;
  /*Adding a full screen scalable image with the next
	5 lines of CSS code*/
  background: url(../images/spaceBG.jpg) no-repeat center center fixed;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

/* We typically wrap all the web page elements
in a main or global container*/

#container {
  /*To Debug, We show a border to help us build and design, we remove it by
	changing 1px to 0px when we are done to remove the border visual*/
  border: solid 0px white;
  /*This makes the main container a flex container*/
  display: flex;
  /*We set this to column direction because default is row
	and we want the header and #contentArea to stack vertically instead of horizontally*/
  flex-direction: column;
}

/*This is a flex item because its parent element #container is a flex container*/

header {
  /*To Debug, We show a border to help us build and design, we remove it by
		changing 1px to 0px when we are done to remove the border visual*/
  border: solid 0px white;
  /*We set position fixed because we want to keep our header in view even if the user scrolls down*/
  position: fixed;
  /*A flex-grow set to initial is necessary here because a fixed position element
		 requires a width to be specified. By default a div that is
		 fixed positioned with be as wide as the content requires
		 but it won't be 100% wide as a static positioned div*/
  flex-grow: initial;
  /*We specified 100vw, viewport's width to cover across the browser's window's width*/
  width: 100vw;
  /*Set a fixed height*/
  height: 50px;
  /*Even though this is a flex item, it can
		,at the same time, be a flex container
		This would allow us to make the children elements flex items*/
  display: flex;
  /*Adding a thin line border at the bottom of the header*/
  border-bottom: solid 1px rgba(255, 0, 0, .2);
  /*Set background to black color*/
  background: #000;
}

/*The #logo and nav are both flex items of header flex container*/

#logo {
  /*To Debug, We show a border to help us build and design, we remove it by
			changing 1px to 0px when we are done to remove the border visual*/
  border: solid 0px white;
  /*This property sets font color*/
  color: white;
  /*We use this to justify center the text*/
  text-align: center;
  /*This property changes the size of the font*/
  font-size: 30pt;
  /*Setting this to a custom font defined in fonts.css*/
  font-family: go3v2;
  /*A flex item will not be 100% wide, so we use flex-grow to have
			the item calculate and adjust its own width to take all the
			available space*/
  flex-grow: 1;
}

#logo a {
  /*set color to hyperlink so that it doesn't default to blue*/
  color: white;
  /*remove the default underline that appears in hyperlinks*/
  text-decoration: none;
}

nav {
  /*To Debug, We show a border to help us build and design, we remove it by
			changing 1px to 0px when we are done to remove the border visual*/
  border: solid 0px white;
  /*A flex item will not be 100% wide, so we use flex-grow to have
			the item calculate and adjust its own width to take all the
			available space*/
  flex-grow: 1;
  /*Even though this is a flex item, it can
			,at the same time, be a flex container
			This would allow us to make the children elements flex items*/
  display: flex;
  /*We use the align-items flex property to make the children be position
			in the vertical center*/
  align-items: center;
}

nav ul {
  /*To Debug, We show a border to help us build and design, we remove it by
				changing 1px to 0px when we are done to remove the border visual*/
  border: solid 0px white;
  /*This removes the bullets from the unordered list*/
  list-style: none;
  /*We remove the left-indentation(padding)
				and the space on the top and bottom (margin) */
  padding: 0px;
  margin: 0px;
  /*A flex item will not be 100% wide, so we use flex-grow to have
				the item calculate and adjust its own width to take all the
				available space*/
  flex-grow: 1;
  /*Even though this is a flex item, it can
				,at the same time, be a flex container
				This would allow us to make the children elements flex items*/
  display: flex;
}

/*At this point, <a> elements are flex items because the parent ul element
				is a flex container*/

/*We wrap an anchor tag, <a>, around each li to make the entire li box a hyperlink*/

nav ul a {
  /*An anchor tag, <a>, is an inline element, therefore we must turn it into a block to flex it*/
  display: block;
  /*Now that the anchor is a block, we make it flex */
  flex-grow: 1;
  /*We do this to remove the default underline of a hyperlink*/
  text-decoration: none;
  /*We change the default hyperlink color*/
  color: orange;
  /*Setting this to a custom font defined in fonts.css*/
  font-family: go3v2;
}

nav ul a li {
  /*To Debug, We show a border to help us build and design, we remove it by
					changing 1px to 0px when we are done to remove the border visual*/
  border: solid 0px white;
  /*We use this to justify center the text*/
  text-align: center;
}

nav ul a li:hover {
  /*To Debug, We show a border to help us build and design, we remove it by
					changing 1px to 0px when we are done to remove the border visual*/
  border: solid 0px white;
  /*We use this to justify center the text*/
  text-align: center;
  /*Change background to white when mouse over event is in effect*/
  background: white;
  /*Change font color to white when mouse over event is in effect*/
  color: black;
}

#contentArea {
  /*To Debug, We show a border to help us build and design, we remove it by
		changing 1px to 0px when we are done to remove the border visual*/
  border: solid 0px white;
  /*We start with a top margin of 50px to start right below the header, because
		the header is fixed positioned, it will not be in the same level as the #contentArea sibling
		ultimately letting it render behind it, so we use margin top here to push the #contentArea down*/
  margin-top: 50px;
  /*We use initial here because we want to set the min-height to a fixed value*/
  flex-grow: 1;
  /*We can set a minimum height on a flex item that has initial as value for flex-grow
		min-height starts a box at this height but it's not fixed and it will expand as more content is added to it */
  min-height: 85vh;
  /*Even though this is a flex item, it can
		,at the same time, be a flex container
		This would allow us to make the children elements flex items*/
  display: flex;
  /*We set this to column direction because default is row
		and we want the two .row elements to stack vertically instead of horizontally*/
  flex-direction: column;
}

.row {
  /*To Debug, We show a border to help us build and design, we remove it by
			changing 1px to 0px when we are done to remove the border visual*/
  border: solid 1px black;
  /*Making this flex item evenly ocupy space*/
  flex-grow: 1;
  /*Assuring that the automatic scaling stops at 300px as a minimum, ultimately ensuring the content to remain visible when scaling down*/
  min-height: 300px;
  /*Even though this is a flex item, it can
			,at the same time, be a flex container
			This would allow us to make the children elements flex items*/
  display: flex;
}

/*Only selecting the section element that are children of .row*/

.row section {
  /*To Debug, We show a border to help us build and design, we remove it by
				changing 1px to 0px when we are done to remove the border visual*/
  border: solid 1px black;
  /*Again, we set this flex-grow to 1 to have the flex item flex*/
  flex-grow: 1;
  /*We add a margin around them to add negative space*/
  margin: 2%;
  /*we distribute the margin evenly across the flex items*/
  justify-content: space-around;
  /*Make the font color white*/
  color: white;
  /*make the font scale and be at 20% of the height of browser window*/
  font-size: 20vh;
  /*align text to center of the box*/
  text-align: center;
  /*Turn this flex item into a flex container as well*/
  display: flex;
  /*Specify vertical directionality*/
  flex-direction: column;
  /*center vertically because it is a column direction*/
  justify-content: center;
}

.row section:hover {
  /*change the background when the mouse is over*/
  background: black;
  /*change the color when the mouse is over*/
  color: orange;
  /*change the cursor to a hand*/
  cursor: pointer;
}

.row section a {
  /*set the color of hyperlink to white*/
  color: white;
}

.row section a:hover {
  /*set color to orange when mouse is over hyperlinks inside <section> tags*/
  color: orange;
}

#interest {
  /*set background to black*/
  background: black;
  /*auto adjust dimensions via flexbox*/
  flex-grow: 1;
  /*added padding to push content towards center of box
				and not too close to the edges*/
  padding: 100px;
}

#interestDesc {
  /*set background to black*/
  background: black;
  /*set font color to white*/
  color: white;
  /*auto adjust flex item dimension*/
  flex-grow: 1;
  /*adding scalable font- size*/
  font-size: 2vh;
  /*adding padding to push content away from */
  padding: 100px;
  /*using custom font defined in css/fonts.css*/
  font-family: futurist;
}

footer {
  /*To Debug, We show a border to help us build and design, we remove it by
		changing 1px to 0px when we are done to remove the border visual*/
  border: solid 0px white;
  /*Set the footer background color to black*/
  background: rgba(0, 0, 0, .5);
  /*we set this to flex grow initial so that we can define our own height and not have flex item scale*/
  flex-grow: initial;
  /*we set a height of 15vh, which is 15% of the height of the browser's window's height*/
  height: 10vh;
  /*we define a minimum where the footer can scale down beyond this point ensuring that we have a visible footers when scaling down*/
  min-height: 100px;
  /*Turn this flex item to flex container*/
  display: flex;
  /*Set the position to relative so that we can position its children with absolute, see #social below*/
  position: relative;
}

#social {
  /*To Debug, We show a border to help us build and design, we remove it by
			changing 1px to 0px when we are done to remove the border visual*/
  border: solid 0px white;
  /*Set this to initial to define dimensions manually*/
  flex-grow: initial;
  /*set this item to position absolute, so that we can enable
			right and bottom properties and position our object there
			in relation to its parent , <footer>*/
  position: absolute;
  right: 50px;
  bottom: 10px;
  /*typographic treatments below*/
  font-size: 3vh;
  color: white;
}

#social i {
  /*add a margin around the font-awesome elements*/
  margin: 20px;
}

#social i:hover {
  /*change color when the mouse is over*/
  color: yellow;
  /*change cursor to a hand when the mouse is over*/
  cursor: pointer;
}
